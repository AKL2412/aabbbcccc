package com.gp.domain;

// Generated 20 nov. 2014 15:33:35 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.outils.gp.Tool;

/**
 * Societe generated by hbm2java
 */
@Entity
@Table(name = "societe", catalog = "gp")
public class Societe implements java.io.Serializable {

	private Integer societeId;
	private Parametre parametre;
	private String intituleSociete;
	private String patente;
	private String idfiscale;
	private String rcCodeTribunal;
	private String cnss;
	private String cimr;
	private String telephone;
	private String fax;
	private String email;
	private String adresse;
	private String mutuelle;
	private Date dateajout;
	private String logo;
	private String slug;
	private String ville;
	private int maxcompte;
	private Set<Salarie> salaries = new HashSet<Salarie>(0);
	private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);
	private Set<Exercice> exercices = new HashSet<Exercice>(0);
	private Set<Societebareme> societebaremes = new HashSet<Societebareme>(0);
	private Set<Prime> primes = new HashSet<Prime>(0);

	public Societe() {
	}

	public Societe(String intituleSociete, String patente, String idfiscale,
			String rcCodeTribunal, String cnss, String cimr, String telephone,
			String fax, String email, String adresse, String mutuelle,
			Date dateajout, String logo, String slug, int maxcompte) {
		this.intituleSociete = intituleSociete;
		this.patente = patente;
		this.idfiscale = idfiscale;
		this.rcCodeTribunal = rcCodeTribunal;
		this.cnss = cnss;
		this.cimr = cimr;
		this.telephone = telephone;
		this.fax = fax;
		this.email = email;
		this.adresse = adresse;
		this.mutuelle = mutuelle;
		this.dateajout = dateajout;
		this.logo = logo;
		this.slug = slug;
		this.maxcompte = maxcompte;
	}

	public Societe(Parametre parametre, String intituleSociete, String patente,
			String idfiscale, String rcCodeTribunal, String cnss, String cimr,
			String telephone, String fax, String email, String adresse,
			String mutuelle, Date dateajout, String logo, String slug,
			String ville, int maxcompte, Set<Salarie> salaries,
			Set<Utilisateur> utilisateurs, Set<Exercice> exercices,
			Set<Societebareme> societebaremes, Set<Prime> primes) {
		this.parametre = parametre;
		this.intituleSociete = intituleSociete;
		this.patente = patente;
		this.idfiscale = idfiscale;
		this.rcCodeTribunal = rcCodeTribunal;
		this.cnss = cnss;
		this.cimr = cimr;
		this.telephone = telephone;
		this.fax = fax;
		this.email = email;
		this.adresse = adresse;
		this.mutuelle = mutuelle;
		this.dateajout = dateajout;
		this.logo = logo;
		this.slug = slug;
		this.ville = ville;
		this.maxcompte = maxcompte;
		this.salaries = salaries;
		this.utilisateurs = utilisateurs;
		this.exercices = exercices;
		this.societebaremes = societebaremes;
		this.primes = primes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "societeID", unique = true, nullable = false)
	public Integer getSocieteId() {
		return this.societeId;
	}

	public void setSocieteId(Integer societeId) {
		this.societeId = societeId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "parametre")
	public Parametre getParametre() {
		return this.parametre;
	}

	public void setParametre(Parametre parametre) {
		this.parametre = parametre;
	}

	@Column(name = "intituleSociete", nullable = false)
	public String getIntituleSociete() {
		return this.intituleSociete;
	}

	public void setIntituleSociete(String intituleSociete) {
		this.intituleSociete = intituleSociete;
	}

	@Column(name = "patente", nullable = false)
	public String getPatente() {
		return this.patente;
	}

	public void setPatente(String patente) {
		this.patente = patente;
	}

	@Column(name = "idfiscale", nullable = false)
	public String getIdfiscale() {
		return this.idfiscale;
	}

	public void setIdfiscale(String idfiscale) {
		this.idfiscale = idfiscale;
	}

	@Column(name = "rcCodeTribunal", nullable = false, length = 200)
	public String getRcCodeTribunal() {
		return this.rcCodeTribunal;
	}

	public void setRcCodeTribunal(String rcCodeTribunal) {
		this.rcCodeTribunal = rcCodeTribunal;
	}

	@Column(name = "cnss", nullable = false)
	public String getCnss() {
		return this.cnss;
	}

	public void setCnss(String cnss) {
		this.cnss = cnss;
	}

	@Column(name = "cimr", nullable = false)
	public String getCimr() {
		return this.cimr;
	}

	public void setCimr(String cimr) {
		this.cimr = cimr;
	}

	@Column(name = "telephone", nullable = false)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "fax", nullable = false)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "adresse", nullable = false)
	public String getAdresse() {
		return this.adresse;
	}

	public void setAdresse(String adresse) {
		this.adresse = adresse;
	}

	@Column(name = "mutuelle", nullable = false)
	public String getMutuelle() {
		return this.mutuelle;
	}

	public void setMutuelle(String mutuelle) {
		this.mutuelle = mutuelle;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateajout", nullable = false, length = 10)
	public Date getDateajout() {
		return this.dateajout;
	}

	public void setDateajout(Date dateajout) {
		this.dateajout = dateajout;
	}

	@Column(name = "logo", nullable = false)
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "slug", nullable = false)
	public String getSlug() {
		return this.slug;
	}

	public void setSlug(String slug) {
		this.slug = slug;
	}

	@Column(name = "ville")
	public String getVille() {
		return this.ville;
	}

	public void setVille(String ville) {
		this.ville = ville;
	}

	@Column(name = "maxcompte", nullable = false)
	public int getMaxcompte() {
		return this.maxcompte;
	}

	public void setMaxcompte(int maxcompte) {
		this.maxcompte = maxcompte;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "societe")
	public Set<Salarie> getSalaries() {
		Set<Salarie> sal =  new HashSet<Salarie>(0) ;
		for(Salarie s:this.salaries){
			if(s.getActive())
				sal.add(s);
		}
		
		return sal;
	}

	public void setSalaries(Set<Salarie> salaries) {
		this.salaries = salaries;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "societe")
	public Set<Utilisateur> getUtilisateurs() {
		return this.utilisateurs;
	}

	public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
		this.utilisateurs = utilisateurs;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "societe")
	public Set<Exercice> getExercices() {
		return this.exercices;
	}

	public void setExercices(Set<Exercice> exercices) {
		this.exercices = exercices;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "societe")
	public Set<Societebareme> getSocietebaremes() {
		return this.societebaremes;
	}

	public void setSocietebaremes(Set<Societebareme> societebaremes) {
		this.societebaremes = societebaremes;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "societe")
	public Set<Prime> getPrimes() {
		return this.primes;
	}

	public void setPrimes(Set<Prime> primes) {
		this.primes = primes;
	}
	

	/*
	 * Mes fonctions
	 */
	
	public List<Salarie> salarieAnotifier(){
		List<Salarie> list = new ArrayList<Salarie>();
//		for(Salarie s:this.salaries)
//			if(s.notifiable()) list.add(s);
		return list;
	}
	public Salarie recupererSalarie(Integer id){
		for(Salarie s:this.salaries){
			if(s.getSalarieId().equals(id)) return s;
		}
		return null;
	}
	public String toString() {
		return "Intitule :"+this.intituleSociete+"\nDate d'ajout : "+this.dateajout+"\nLogo : "+this.logo;
	}
	public String lienLogo(){
		Utilisateur u = this.compteDefaut();
		if(u != null){
			return u.getLogin()+"/logos/"+this.logo;
		}
		return "vide";
			
	}
	public boolean disposerBareme(Integer baremeId){
		for(Societebareme sb:this.societebaremes){
			if(sb.getBareme().getBaremeId().equals(baremeId))
				return true;
		}
		return false;
	}
	public Utilisateur compteDefaut(){
		for(Utilisateur u:this.utilisateurs){
			if(u.getRole().getNum() == 2)
				return u;
		}
		return null;
	}
	public List<Societebareme> baremeObligatoires(){
		List<Societebareme> listes = new ArrayList<Societebareme>();
		
		for(Societebareme sb:this.societebaremes){
			if(sb.getBareme().getCaractere().equals("obligatoire"))
				listes.add(sb);
		}
		
		return listes;
	}
	public List<Societebareme> baremeObligatoireSalaries(){
		List<Societebareme> listes = new ArrayList<Societebareme>();
		for(Societebareme sb:this.societebaremes){
			
			if(sb.getBareme().getCaractere().equals("obligatoire") &&
					sb.getBareme().getType().equals("Salarié"))  listes.add(sb);
		}
		
		return listes;
	}
	public List<Societebareme> baremeObligatoirePatronal(){
		List<Societebareme> listes = new ArrayList<Societebareme>();
		for(Societebareme sb:this.societebaremes){
			
			if(sb.getBareme().getCaractere().equals("obligatoire") &&
					sb.getBareme().getType().equals("Patronal"))  listes.add(sb);
		}
		
		return listes;
	}
	public List<Societebareme> baremePatronal(){
		List<Societebareme> listes = new ArrayList<Societebareme>();
		for(Societebareme sb:this.societebaremes){
			
			if(sb.getBareme().getType().equals("Patronal"))  listes.add(sb);
		}
		
		return listes;
	}
	
	public List<Societebareme> baremePropres(){
		List<Societebareme> listes = new ArrayList<Societebareme>();
		for(Societebareme sb:this.societebaremes){
			
			if(sb.getBareme().getCaractere().equals("optionnel"))  listes.add(sb);
		}
		
		return listes;
	}
	
	public List<Societebareme> baremePropresSalaries(){
		List<Societebareme> listes = new ArrayList<Societebareme>();
		for(Societebareme sb:this.societebaremes){
			
			if(sb.getBareme().getCaractere().equals("optionnel") &&
					sb.getBareme().getType().equals("Salarié"))  listes.add(sb);
		}
		
		return listes;
	}
	public List<Societebareme> baremePropresPatronal(){
		List<Societebareme> listes = new ArrayList<Societebareme>();
		for(Societebareme sb:this.societebaremes){
			
			if(sb.getBareme().getCaractere().equals("optionnel") &&
					sb.getBareme().getType().equals("Patronal"))  listes.add(sb);
		}
		
		return listes;
	}
	public Exercice exoEncours(){
		
		if(this.exoActif())
		for(Exercice e:this.exercices)
			if(e.isEncours()) return e;
		return null;
		
	}
	private boolean exoActif(){
		int i = 0;
		for(Exercice e:this.exercices){
			if(e.isEncours()) i++;
		}
		if(i == 1 )
			return true;
		return false;
		
	}
	
	public List<Prime> primesCollectives(){
		List<Prime> listes = new ArrayList<Prime>();
		for(Prime p:this.primes){
			
			if(p.getType().equals("collective"))  listes.add(p);
		}
		
		return listes;
	}
	
	public Bareme trouverBareme(Integer idbarem){
		
		for(Societebareme sb:this.societebaremes)
			if(sb.getBareme().getBaremeId().equals(idbarem)) return sb.getBareme();
		return null;
	}

	public List<Salarie> recherche(String q){
		List<Salarie> listes = new ArrayList<Salarie>();
		for(Salarie s:this.salaries){
			if(Tool.recherche(s.getEtatcivile().getNom()+" "+s.getEtatcivile().getPrenom(), q))
				listes.add(s);
		}
			
		return listes;
	}

}
